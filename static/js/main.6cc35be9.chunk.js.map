{"version":3,"sources":["icons/timeline1.svg","icons/timeline2.svg","components/Segment/Segment.module.css","components/Slot/Slot.module.css","components/Grid/Grid.module.css","components/HelpIcon/HelpIcon.module.css","icons/iconsSVG/EditIcon.svg","icons/iconsSVG/CloseIcon.svg","components/Header/Header.js","components/Button/Button.js","store/itemTypes.js","store/formFields.js","store/actionTypes.js","store/actionCreators.js","components/TimeLine/TimeLine.js","store/routes.js","pages/MainPage/Header/HeaderContainer.js","store/typeProperties.js","components/Sticker/Sticker.js","components/Sticker/StickerContainer.js","components/Slot/Slot.js","components/Slot/SlotContainer.js","components/AddButton/AddButton.js","components/AddButton/AddButtonContainer.js","components/Grid/Grid.js","components/Segment/Segment.js","components/Segment/SegmentContainer.js","components/HelpIcon/HelpIcon.js","components/SegmentHeader/SegmentHeader.js","components/TextArea/TextArea.js","pages/MainPage/MainArea/MainArea.js","pages/MainPage/MainArea/MainAreaContainer.js","components/StickerEditingWindow/StickerEditingWindow.js","components/StickerEditingWindow/StickerEditingWindowContainer.js","pages/MainPage/MainPage.js","pages/EditFormPage/Header/HeaderContainer.js","components/SideMenu/SideMenu.js","pages/EditFormPage/MainArea/MainArea.js","pages/EditFormPage/MainArea/MainAreaContainer.js","pages/EditFormPage/EditFormPage.js","App.js","serviceWorker.js","store/reducers/stickers.js","store/reducers/stickerDragging.js","store/reducers/stickerEditingWindow.js","store/reducers/fieldValues.js","store/store.js","store/reducers/hover.js","store/reducers/currentField.js","store/reducers/theme.js","index.js","components/StickerEditingWindow/StickerEditingWindow.module.css","pages/MainPage/MainArea/MainArea.module.css","pages/EditFormPage/MainArea/MainArea.module.css","components/Button/Button.module.css","components/SideMenu/SideMenu.module.css","icons/iconsSVG/Logo.svg","components/Header/Header.module.css","components/Sticker/Sticker.module.css","components/AddButton/AddButton.module.css","components/SegmentHeader/SegmentHeader.module.css"],"names":["module","exports","Header","props","className","style","children","slice","Button","classes","button","isAccent","accent","regular","disabled","join","onClick","clickHandler","benefits","advantages","problemSolvings","desires","solutions","tasks","problems","client","header","type","types","idea","model","ADD_STICKER","DELETE_STICKER","CHANGE_STICKER_TYPE","CHANGE_STICKER_POSITION","CHANGE_STICKER_TEXT","START_STICKER_DRAGGING","STOP_STICKER_DRAGGING","OPEN_STICKER_EDITING_WINDOW","CLOSE_STICKER_EDITING_WINDOW","CHANGE_HOVER","CHANGE_FIELD","CHANGE_FIELD_TEXT","CHANGE_THEME","deleteSticker","id","openStickerEditingWindow","stickerType","changeFieldText","field","text","withRouter","display","alignItems","position","pointerEvents","src","match","path","timeline1","timeline2","alt","connect","state","stickers","array","filter","elem","length","theme","dispatch","fillFields","fieldsProps","fieldType","appropStickers","push","sticker","map","content","logo","to","height","width","color","title","slots","helptext","Sticker","useDrag","item","begin","startStickerDragging","end","monitor","stopStickerDragging","dropResult","getDropResult","changeStickerType","drag","React","useState","hover","setHover","ref","backgroundColor","typeProperties","opacity","stickerDraggingId","onMouseOver","onMouseLeave","visibility","event","stopPropagation","stickerDragging","newType","Slot","useDrop","accept","collect","isOver","drop","dragEnter","setDragEnter","changeStickerPosition","slot","AddButton","wrapper","addSticker","currentId","borderColor","isVisible","horisontal","vertical","ownProps","Grid","i","key","isActive","Segment","typesArr","sort","a","b","changeHover","boxShadow","isOnTop","isStickerEditingActive","stickerEditingWindow","createMuiTheme","overrides","MuiTooltip","tooltip","fontSize","Tooltip","SegmentHeader","TextArea","value","setText","placeholder","onChange","target","maxLength","MainArea","main","changeTheme","childComponents","ind","StickerEditingWindow","setHeader","setContent","blur","onKeyDown","closeWindow","changeStickerText","textareaContainer","stickerTittle","stickerDescription","footer","close","flexDirection","HeaderContainer","alert","SideMenu","setValue","radio","classList","checked","name","selectedValue","changeHandler","editMode","toggleEditMode","editWindow","currentField","backgroundImage","closeIcon","changeField","tip","overflow","editIcon","fieldValues","EditFormPage","App","exact","component","MainPage","Boolean","window","location","hostname","initialState","createStore","combineReducers","action","positions","Math","max","newPosition","moveRight","sameTypeArr","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cc35be9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timeline1.f1d91e4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/timeline2.e7ef8879.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Segment_wrapper__1xDmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slot\":\"Slot_slot__ih_oA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Grid_wrapper__38Gz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"HelpIcon_icon__29EDo\",\"MuiTooltip-popper\":\"HelpIcon_MuiTooltip-popper__1Q8F_\"};","module.exports = __webpack_public_path__ + \"static/media/EditIcon.d5a0fa09.svg\";","module.exports = __webpack_public_path__ + \"static/media/CloseIcon.40000a14.svg\";","import React from 'react';\r\nimport * as style from './Header.module.css'\r\n\r\n// Шапка\r\nconst Header = (props) => {\r\n    return (\r\n        // переданные в компонент дети делятся методом slice\r\n        // первый переданный массив - левые кнопки\r\n        // второй - правые\r\n        // третий - по центру\r\n        <div className={style.wrapper}>\r\n            <div className={style.left}>{props.children.slice(0, 2)}</div>\r\n            <div className={style.right}>{props.children.slice(2)}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport style from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    const classes = [\r\n    style.button,\r\n    props.isAccent ? style.accent : style.regular,\r\n    props.disabled && style.disabled\r\n    ].join(\" \");\r\n    return (\r\n        <div onClick={props.clickHandler} \r\n        className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","export const benefits = \"benefits\";\r\nexport const advantages = \"advantages\";\r\nexport const problemSolvings = \"problemSolvings\";\r\nexport const desires = \"desires\";\r\nexport const solutions = \"solutions\";\r\nexport const tasks = \"tasks\";\r\nexport const problems = \"problems\";\r\n","import * as types from './itemTypes'\r\n\r\nexport const client = \"client\";\r\nexport const problems = \"problems\";\r\nexport const idea = \"idea\";\r\nexport const advantages = \"advantages\";\r\nexport const model = \"model\";\r\nexport default {\r\n    client: {header: \"Кто ваш клиент\", type: [types.desires]},\r\n    problems: {header: \"Проблемы клиента\", type: [types.problems]},\r\n    idea: {header: \"В чем суть вашего продукта/сервиса/технологии\", type: [types.benefits, types.problemSolvings]},\r\n    advantages: {header: \"Ваши конкурентные преимущества\", type: [types.advantages]},\r\n    model: {header: \"Бизнес-модель\", type: []},\r\n}","/* здесь создаём константы для редьюсеров.\r\nДелаем это в отдельном файле, чтобы случайно\r\nне создать дублирующиеся переменные */\r\n\r\nexport const ADD_STICKER = \"ADD_STICKER\";\r\nexport const DELETE_STICKER = \"DELETE_STICKER\";\r\nexport const CHANGE_STICKER_TYPE = \"CHANGE_STICKER_TYPE\";\r\nexport const CHANGE_STICKER_POSITION = \"CHANGE_STICKER_POSITION\";\r\nexport const CHANGE_STICKER_TEXT = \"CHANGE_STICKER_TEXT\"\r\n\r\nexport const START_STICKER_DRAGGING = \"START_STICKER_DRAGGING\";\r\nexport const STOP_STICKER_DRAGGING = \"STOP_STICKER_DRAGGING\";\r\n\r\nexport const OPEN_STICKER_EDITING_WINDOW = \"OPEN_STICKER_EDITING_WINDOW\";\r\nexport const CLOSE_STICKER_EDITING_WINDOW = \"CLOSE_STICKER_EDITING_WINDOW\";\r\n\r\nexport const CHANGE_HOVER = \"CHANGE_HOVER\";\r\nexport const CHANGE_FIELD = \"CHANGE_FIELD\";\r\nexport const CHANGE_FIELD_TEXT = \"CHANGE_FIELD_TEXT\";\r\nexport const CHANGE_THEME = \"CHANGE_THEME\";","import {ADD_STICKER,\r\n    DELETE_STICKER,\r\n    CHANGE_STICKER_TYPE,\r\n    CHANGE_STICKER_POSITION,\r\n    CHANGE_STICKER_TEXT,\r\n    START_STICKER_DRAGGING,\r\n    STOP_STICKER_DRAGGING,\r\n    OPEN_STICKER_EDITING_WINDOW,\r\n    CLOSE_STICKER_EDITING_WINDOW,\r\n    CHANGE_HOVER,\r\n    CHANGE_FIELD,\r\n    CHANGE_FIELD_TEXT,\r\n    CHANGE_THEME,\r\n} from './actionTypes'\r\n\r\n\r\nexport function addSticker(stickerType) {return {type: ADD_STICKER, stickerType}}\r\nexport function deleteSticker(id) {return {type: DELETE_STICKER, id}}\r\nexport function changeStickerType(id, newType) \r\n{return {type: CHANGE_STICKER_TYPE, id, newType}\r\n}\r\nexport function changeStickerPosition(id, position) \r\n{return {type: CHANGE_STICKER_POSITION, id, position}\r\n}\r\nexport function changeStickerText(id, header, content)\r\n{return {type: CHANGE_STICKER_TEXT, id, header, content}}\r\n\r\nexport function startStickerDragging(id, stickerType) {return {type: START_STICKER_DRAGGING, id, stickerType}}\r\nexport function stopStickerDragging() {return {type: STOP_STICKER_DRAGGING}}\r\n\r\nexport function openStickerEditingWindow(id, stickerType) {return {type: OPEN_STICKER_EDITING_WINDOW, id, stickerType}}\r\nexport function closeStickerEditingWindow() {return {type: CLOSE_STICKER_EDITING_WINDOW}}\r\n\r\nexport function changeHover(hover) {return {type: CHANGE_HOVER, hover}}\r\n\r\nexport function changeField(field) {return {type: CHANGE_FIELD, field}}\r\n\r\nexport function changeFieldText(field, text) {return {type: CHANGE_FIELD_TEXT, field, text}}\r\n\r\nexport function changeTheme(theme) {return {type: CHANGE_THEME, theme}}","import React from 'react'\r\nimport { withRouter } from \"react-router\";\r\nimport * as fields from '../../store/routes'\r\nimport timeline1 from '../../icons/timeline1.svg'\r\nimport timeline2 from '../../icons/timeline2.svg'\r\n\r\nconst TimeLine = (props) => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            position: \"relative\"\r\n        }}>\r\n            <img style={{\r\n                pointerEvents: \"none\"\r\n            }}\r\n                src={\r\n                    (props.match.path === fields.main && timeline1) ||\r\n                    (props.match.path === fields.editForm && timeline2)\r\n                } alt=\"timeline\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(TimeLine);","export const main = '/';\r\nexport const editForm = '/edit-form';\r\nexport const sending = '/sending';\r\n\r\nexport default {\r\n    main: \"Описание идеи\",\r\n    editForm: \"Формулировка идеи\",\r\n    sending: \"Подача идеи\",\r\n}","import React from 'react'\r\nimport Header from '../../../components/Header/Header'\r\nimport logo from '../../../icons/iconsSVG/Logo.svg'\r\nimport Button from '../../../components/Button/Button'\r\nimport { connect } from 'react-redux'\r\nimport * as types from '../../../store/itemTypes'\r\nimport { NavLink } from 'react-router-dom'\r\nimport fieldsProps from '../../../store/formFields'\r\nimport { changeFieldText } from '../../../store/actionCreators'\r\nimport TimeLine from '../../../components/TimeLine/TimeLine'\r\n\r\n\r\nconst HeaderContainer = (props) => {\r\n  return (\r\n    <Header>\r\n      <img src={logo} alt=\"Logo\" />\r\n      <TimeLine />\r\n      <Button isAccent={true} disabled={props.disabled}\r\n        clickHandler={() => { props.fillFields(props.stickers) }}>\r\n        <NavLink to=\"/edit-form\"\r\n          style={{\r\n            position: \"absolute\",\r\n            height: \"100%\",\r\n            width: \"100%\"\r\n          }} />\r\n        Формулировка идеи\r\n          </Button>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: (() => {\r\n    for (let type in types) {\r\n      const stickers = state.stickers.array\r\n        .filter(elem => elem.type === type);\r\n      if (!stickers.length) return true;\r\n    }\r\n    if (!state.theme) return true;\r\n    return false;\r\n  })(),\r\n  stickers: state.stickers.array\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fillFields: (stickers) => {\r\n    for (let field in fieldsProps) {\r\n      const fieldType = fieldsProps[field].type;\r\n      const appropStickers = [];\r\n      for (let type of fieldType) {\r\n        appropStickers.push(...stickers.filter(sticker =>\r\n          sticker.type === type)\r\n        )\r\n      }\r\n      let text = appropStickers.map(sticker => sticker.content).join(\"\\n\");\r\n      dispatch(changeFieldText(field, text));\r\n    }\r\n  }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HeaderContainer);","import React from 'react'\r\n\r\nexport default {\r\n    benefits: {\r\n        color: \"#BAE2E2\", title: \"В чем выгоды вашего продукта\", slots: 4,\r\n        helptext: <div>- Что конкретно получит клиент?<br />\r\n        - На сколько сокращается время выполнения операции/стоимость продукта/бюджет и т.д.?</div>,\r\n    },\r\n\r\n    advantages: {\r\n        color: \"#D5E9FA\", title: \"Отличия от конкурентов\", slots: 4,\r\n        helptext: <div>- В чем заключается конкурентное преимущество вашего продукта?<br />\r\n        - Какие выгоды он предоставляет в отличие от конкурентов ? </div>,\r\n    },\r\n\r\n    problemSolvings: {\r\n        color: \"#FFAA9F\", title: \"Как продукт решает проблему\", slots: 8,\r\n        helptext: <div>- Что именно вы предлагаете?<br />\r\n        - В чем суть вашей идеи?</div>,\r\n    },\r\n\r\n    desires: {\r\n        color: \"#FFE8DA\", title: \"Описание клиента\", slots: 4,\r\n        helptext: <div>- Профиль бизнеса?<br />\r\n        - География?<br />\r\n        - Размер кампании?<br />\r\n        - В чем особенности вашего клиента?</div>,\r\n    },\r\n\r\n    solutions: {\r\n        color: \"#E5E7FA\", title: \"Как проблема решается сейчас\", slots: 4,\r\n        helptext: <div>- Каким образом решают сейчас?<br />\r\n        - Какие варианты решений пробовали?<br />\r\n        - Что мешает решить \"идеально\" ?<br />\r\n        - Какие выгоды клиент получает от текущего решения?</div>,\r\n    },\r\n\r\n    tasks: {\r\n        color: \"#FFC7A6\", title: \"Какие задачи решает клиент\", slots: 4,\r\n        helptext: <div>- Какие бизнес-задачи стоят перед клиентом?<br />\r\n        - В чем клиент хотел бы улучшить свой сервис/продукт?<br />\r\n        - Что наиболее ценно для клиента  с точки зрения денег, времени и усилий?</div>,\r\n    },\r\n\r\n    problems: {\r\n        color: \"#A5AFFB\", title: \"Какие проблемы возникают у клиента\", slots: 4,\r\n        helptext: <div>- Что клиента не устраивает в существующих продуктах/сервисах?<br />\r\n        - С какими  сложностями/проблемами сталкивается клиент?<br />\r\n        - Какие потери возникают чаще всего ?<br />\r\n        - Как возникают эти проблемы?<br />\r\n        - Что является причиной? </div>,\r\n    }\r\n}","import React from 'react'\r\nimport { useDrag } from 'react-dnd'\r\nimport * as style from './Sticker.module.css'\r\nimport typeProperties from '../../store/typeProperties'\r\n\r\nconst Sticker = (props) => {\r\n    const [,drag] = useDrag({\r\n        item: {id: props.id, type: props.type},\r\n        begin: () => {\r\n            props.startStickerDragging(props.id, props.type);\r\n        },\r\n        end: (item, monitor) => {\r\n            props.stopStickerDragging();\r\n            const dropResult = monitor.getDropResult();\r\n            if (dropResult && dropResult.type === \"Slot\") {\r\n                \r\n            }\r\n            else if (dropResult) {\r\n                props.changeStickerType(props.id, dropResult.type);\r\n            }\r\n        }\r\n    });\r\n\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    return (\r\n        <div ref={drag}\r\n        style={{\r\n            backgroundColor: typeProperties[props.type].color,\r\n            opacity: props.id === props.stickerDraggingId ? 0.01 : 1\r\n        }}\r\n        className={`${style.wrapper} ${style.stickerFonts}`}\r\n        onClick={() => {props.openStickerEditingWindow(props.id, props.type)}}\r\n        onMouseOver={()=>{!hover && setHover(true)}}\r\n        onMouseLeave={()=>{setHover(false)}}\r\n        >\r\n            <div className={style.delete}\r\n            style={{\r\n                visibility: hover ? \"visible\" : \"hidden\"\r\n            }} \r\n            onClick={(event)=>{\r\n                event.stopPropagation();\r\n                props.deleteSticker(props.id);\r\n                }}/>\r\n            {props.header}\r\n            {props.content && <><br />...</>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sticker;","import { connect } from 'react-redux'\r\nimport { startStickerDragging, \r\n    stopStickerDragging, \r\n    deleteSticker,\r\n    changeStickerType,\r\n    openStickerEditingWindow\r\n} from '../../store/actionCreators'\r\nimport Sticker from './Sticker'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    stickerDraggingId: state.stickerDragging.id\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startStickerDragging: (id, stickerType) => dispatch(startStickerDragging(id, stickerType)),\r\n    stopStickerDragging: () => dispatch(stopStickerDragging()),\r\n\r\n    deleteSticker: (id) => dispatch(deleteSticker(id)),\r\n\r\n    changeStickerType: (id, stickerType) => dispatch(changeStickerType(id, stickerType)),\r\n\r\n    openStickerEditingWindow: (id, stickerType) => dispatch(openStickerEditingWindow(id, stickerType)),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Sticker);","import React from 'react'\r\nimport { useDrop } from 'react-dnd'\r\nimport style from './Slot.module.css'\r\n\r\nconst Slot = (props) => {\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: props.type,\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n        drop: () => ({ type: \"Slot\", position: props.position }),\r\n    });\r\n\r\n    // создаём переменную-флаг, чтобы проверять момент вхождения в область\r\n    let [dragEnter, setDragEnter] = React.useState(false);\r\n    if (isOver && !dragEnter) {\r\n        setDragEnter(true);\r\n        props.changeStickerPosition(props.id, props.position);\r\n    } else if (!isOver && dragEnter) {\r\n        setDragEnter(false);\r\n    }\r\n\r\n    return (\r\n        <div ref={drop}\r\n            className={style.slot}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slot;","import {connect} from 'react-redux'\r\nimport {changeStickerPosition} from '../../store/actionCreators'\r\nimport Slot from './Slot'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    id: state.stickerDragging.id\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeStickerPosition: (id, position)=>{dispatch(changeStickerPosition(id, position))}\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n    )(Slot);","import React from 'react'\r\nimport classes from './AddButton.module.css'\r\nimport typeProperties from '../../store/typeProperties'\r\n\r\nconst AddButton = (props) => {\r\n    const color = typeProperties[props.type].color;\r\n    const style = {\r\n        backgroundColor: color\r\n    }\r\n    return (\r\n        <div className={classes.wrapper}\r\n        onClick={()=>{\r\n            props.addSticker(props.type);\r\n            props.openStickerEditingWindow(props.currentId + 1, props.type);\r\n        }}\r\n            style={{\r\n                borderColor: color,\r\n                visibility: props.isVisible ? \"visible\" : \"hidden\"\r\n            }}>\r\n            <div className={classes.horisontal} style={style} />\r\n            <div className={classes.vertical} style={style} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddButton;","import AddButton from './AddButton'\r\nimport { connect } from 'react-redux'\r\nimport { addSticker } from '../../store/actionCreators';\r\nimport { openStickerEditingWindow } from '../../store/actionCreators'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    isVisible: state.hover === ownProps.type,\r\n    currentId: state.stickers.currentId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addSticker: (stickerType)=>{dispatch(addSticker(stickerType))},\r\n    openStickerEditingWindow: (id, stickerType) => dispatch(openStickerEditingWindow(id, stickerType)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddButton);","import React from 'react'\r\nimport Slot from '../Slot/SlotContainer'\r\nimport style from './Grid.module.css'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport AddButton from '../AddButton/AddButtonContainer';\r\n\r\n\r\nconst Grid = (props) => {\r\n    const slots = [];\r\n    for (let i = 0; i < props.children.length; i++) {\r\n        slots.push(\r\n            <Slot key={i} type={props.type} position={i} isActive={props.isActive}>\r\n                {props.children[i]}\r\n            </Slot>)\r\n    }\r\n    return (\r\n        <SimpleBar style={{ height: \"32vh\", width: \"100%\" }} >\r\n            <div className={style.wrapper}>\r\n                {slots}\r\n                <AddButton type={props.type} />\r\n            </div>\r\n        </SimpleBar>\r\n    );\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport { useDrop } from 'react-dnd'\r\nimport Sticker from '../Sticker/StickerContainer'\r\nimport * as types from '../../store/itemTypes'\r\nimport style from './Segment.module.css'\r\nimport Grid from '../Grid/Grid';\r\nimport typeProperties from '../../store/typeProperties'\r\n\r\nconst Segment = (props) => {\r\n    // Собираем все имеющиеся типы стикеров\r\n    let typesArr = [];\r\n    for (let key in types) {\r\n        typesArr.push(types[key]);\r\n    }\r\n    // Исключаем текущий, чтобы не было конфликтов между сегментом и сеткой\r\n    typesArr = typesArr.filter((elem) => elem !== props.type);\r\n    // Подключаем библиотеку\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: typesArr,\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n        drop: () => ({ type: props.type }),\r\n    });\r\n    // Сортируем стикеры по их position\r\n    const stickers = props.stickers\r\n        .sort((a, b) => a.position - b.position)\r\n        .map((elem) => (\r\n            <Sticker\r\n                key={elem.id}\r\n                header={elem.header}\r\n                content={elem.content}\r\n                position={elem.position}\r\n                id={elem.id}\r\n                type={elem.type} />\r\n        ));\r\n\r\n    return (\r\n        <div className={style.wrapper} ref={drop} \r\n        onMouseLeave={()=>props.changeHover(\"\")}\r\n        onMouseOver={()=>{props.hover !== props.type && props.changeHover(props.type)}}\r\n            style={{\r\n                boxShadow:\r\n                    isOver ? \"inset 0 0 1px 3px \" + typeProperties[props.type].color : \"none\"\r\n            }}>\r\n\r\n            {props.isOnTop && props.children}\r\n            <Grid type={props.type} slots={typeProperties[props.type].slots}>\r\n                {stickers}\r\n            </Grid>\r\n            {!props.isOnTop && props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Segment;","import { connect } from 'react-redux'\r\nimport Segment from './Segment'\r\nimport { changeHover } from '../../store/actionCreators';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    stickers: state.stickers.array.filter((elem)=>{\r\n        return elem.type === ownProps.type\r\n    }),\r\n    hover: state.hover\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeHover: (hover)=>{dispatch(changeHover(hover))}\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Segment);","import React from 'react'\r\nimport * as style from './HelpIcon.module.css'\r\nimport typeProperties from '../../store/typeProperties'\r\nimport { connect } from 'react-redux'\r\n/**\r\n * Библиотека для всплывающих продсказок. Там же смотреть гибкие настройки и фичи по дизайну\r\n * @link https://material-ui.com/ru/components/tooltips/\r\n * Если нужно закостамайзить tooltip, а его методов не хватает,\r\n * то смотреть сюда @link https://codesandbox.io/s/3xx46v9015\r\n */\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isStickerEditingActive: state.stickerEditingWindow.isActive,\r\n});\r\n\r\nconst HelpIcon = (props) => {\r\n    const theme = createMuiTheme({\r\n        overrides: {\r\n            MuiTooltip: {\r\n                tooltip: {\r\n                    fontSize: \"1rem\",\r\n                    opacity: 1\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <Tooltip title={typeProperties[props.type].helptext}>\r\n                <div className={style.icon} />\r\n            </Tooltip>\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(HelpIcon);","import React from 'react';\r\nimport classes from './SegmentHeader.module.css'\r\nimport HelpIcon from '../HelpIcon/HelpIcon'\r\nimport typeProperties from '../../store/typeProperties'\r\n\r\nconst SegmentHeader = (props) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                {typeProperties[props.type].title}\r\n            </div>\r\n            <HelpIcon type={props.type} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SegmentHeader;","import React from 'react';\r\nimport './TextArea.css'\r\n\r\nconst TextArea = (props) => {\r\n  // Используем хук состояния, чтобы сделать компонент управляемым\r\n  const [text, setText] = React.useState(props.value);\r\n  // Обработчик событий\r\n  const handleChange = (event) => {\r\n    // Обновляем состояние\r\n    setText(event.target.value);\r\n    // Если обработчик передан - вызываем его\r\n    props.onChange &&\r\n      props.onChange(event.target.value);\r\n  };\r\n  return (\r\n    <textarea\r\n      placeholder={props.placeholder}\r\n      value={text}\r\n      onChange={handleChange}\r\n      maxLength={props.maxLength}\r\n      disabled={props.disabled} />\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React from 'react'\r\nimport classes from './MainArea.module.css'\r\nimport TextArea from '../../../components/TextArea/TextArea'\r\n\r\nconst MainArea = (props) => {\r\n  return (\r\n    <div className={classes.main}>\r\n\r\n      <div className={classes[\"work-area-wrapper\"]}>\r\n        <div className={classes.title}>ВАШ ПРОДУКТ</div>\r\n        <div className={classes[\"work-area\"]}>\r\n          {props.children[0]}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes[\"theme-field\"]}>\r\n        <TextArea \r\n          placeholder={\"Введите название идеи\"}\r\n          maxLength={42}\r\n          value={props.theme}\r\n          onChange={(theme) => { props.changeTheme(theme) }}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes[\"work-area-wrapper\"]}>\r\n        <div className={classes.title}>ВАШ КЛИЕНТ</div>\r\n        <div className={classes[\"work-area\"]}>\r\n          {props.children[1]}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainArea;","import React from 'react'\r\nimport Segment from '../../../components/Segment/SegmentContainer'\r\nimport SegmentHeader from '../../../components/SegmentHeader/SegmentHeader'\r\nimport * as types from '../../../store/itemTypes'\r\nimport MainArea from './MainArea';\r\nimport { connect } from 'react-redux'\r\nimport { changeTheme } from '../../../store/actionCreators';\r\n\r\n// Этот компонент был создан, чтобы разгрузить компонент MainArea\r\n// Вынос логики из презентационного компонента - стандартная практика\r\nconst MainAreaContainer = (props) => {\r\n  let segments = [\r\n    { id: 1, isOnTop: true, type: types.benefits },\r\n    { id: 2, isOnTop: true, type: types.advantages },\r\n    { id: 3, isOnTop: false, type: types.problemSolvings },\r\n    { id: 4, isOnTop: true, type: types.desires },\r\n    { id: 5, isOnTop: true, type: types.problems },\r\n    { id: 6, isOnTop: false, type: types.solutions },\r\n    { id: 7, isOnTop: false, type: types.tasks },\r\n  ]\r\n\r\n  let childComponents = segments.map((elem, ind) => {\r\n    return (<Segment\r\n      key={elem.type}\r\n      type={elem.type}\r\n      isOnTop={elem.isOnTop}>\r\n      <SegmentHeader\r\n        key={elem.id}\r\n        type={elem.type}\r\n      />\r\n    </Segment>)\r\n  });\r\n\r\n  // прокидывание полученного в основной компонент\r\n  // первый массив - в левую область, остальное - в правую\r\n  return (\r\n    <MainArea theme={props.theme} changeTheme={props.changeTheme}>\r\n      {childComponents.slice(0, 3)}\r\n      {childComponents.slice(3)}\r\n    </MainArea>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  theme: state.theme\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeTheme: (theme) => { dispatch(changeTheme(theme)) }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainAreaContainer);\r\n","import React from 'react'\r\nimport classes from './StickerEditingWindow.module.css'\r\nimport typeProperties from '../../store/typeProperties'\r\nimport HelpIcon from '../HelpIcon/HelpIcon'\r\nimport Button from '../Button/Button'\r\n\r\nconst StickerEditingWindow = (props) => {\r\n    const [header, setHeader] = React.useState(props.sticker.header);\r\n    const [content, setContent] = React.useState(props.sticker.content);\r\n    return (\r\n        <div className={classes.blur} onClick={(event) => {\r\n            event.stopPropagation();\r\n        }}>\r\n            <div className={classes.wrapper} onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                    props.closeWindow();\r\n                    props.changeStickerText(props.sticker.id, header, content);\r\n                }\r\n            }}>\r\n\r\n                <div className={classes.title}>\r\n                    {typeProperties[props.sticker.type].title}\r\n                    <HelpIcon type={props.sticker.type} />\r\n                </div>\r\n\r\n                <div className={classes.textareaContainer}>\r\n                    <strong>Тема стикера</strong>\r\n                    <textarea maxLength=\"37\"\r\n                        className={classes.stickerTittle}\r\n                        placeholder=\"Кратко сформулируйте тему стикера. Тема будет видна на шаблоне\"\r\n                        value={header}\r\n                        onChange={(event) => setHeader(event.target.value)} />\r\n                </div>\r\n\r\n                <div className={classes.textareaContainer}>\r\n                    <strong>Описание</strong>\r\n                    <textarea maxLength=\"337\"\r\n                        className={classes.stickerDescription}\r\n                        placeholder=\"Сформулируйте свои мысли\"\r\n                        value={content}\r\n                        onChange={(event) => setContent(event.target.value)} />\r\n                </div>\r\n\r\n                <div className={classes.footer}>\r\n                    <Button isAccent={true} clickHandler={() => {\r\n                        props.closeWindow();\r\n                        props.changeStickerText(props.sticker.id, header, content);\r\n                    }}>Сохранить</Button>\r\n                </div>\r\n\r\n                <div className={classes.close}\r\n                    onClick={() => {\r\n                        props.closeWindow();\r\n                    }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StickerEditingWindow;","import { connect } from 'react-redux'\r\nimport {\r\n    closeStickerEditingWindow,\r\n    changeStickerText,\r\n    deleteSticker\r\n} from '../../store/actionCreators'\r\nimport StickerEditingWindow from './StickerEditingWindow'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sticker: state.stickers.array.filter((elem) => {\r\n        return elem.id === state.stickerEditingWindow.id\r\n    })[0],\r\n    isActive: state.stickerEditingWindow.isActive,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    closeWindow: () => dispatch(closeStickerEditingWindow()),\r\n    changeStickerText: (id, header, content) => dispatch(changeStickerText(id, header, content)),\r\n    deleteSticker: (id) => dispatch(deleteSticker(id))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StickerEditingWindow)","import React from 'react';\r\nimport Header from './Header/HeaderContainer'\r\nimport MainArea from './MainArea/MainAreaContainer'\r\nimport StickerEditingWindow from '../../components/StickerEditingWindow/StickerEditingWindowContainer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst MainPage = (props) => {\r\n    return (\r\n        <div style={{\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n        }}>\r\n            <Header />\r\n            <MainArea />\r\n            {props.isStickerEditingActive && <StickerEditingWindow />}\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isStickerEditingActive: state.stickerEditingWindow.isActive,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainPage);","import React from 'react'\r\nimport Header from '../../../components/Header/Header'\r\nimport logo from '../../../icons/iconsSVG/Logo.svg'\r\nimport Button from '../../../components/Button/Button'\r\nimport TimeLine from '../../../components/TimeLine/TimeLine'\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header>\r\n            <img src={logo} alt=\"Logo\"/>\r\n            <TimeLine />\r\n            <Button isAccent={true} clickHandler={() => { alert(\"Подано\") }}>Подать идею</Button>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react'\r\nimport classes from './SideMenu.module.css'\r\nimport { RadioGroup, RadioButton } from 'react-custom-radio';\r\nimport fieldsProps from '../../store/formFields'\r\n\r\n\r\nconst SideMenu = (props) => {\r\n    const [value, setValue] = React.useState(props.children[0]);\r\n    const changeHandler = (value) => {\r\n        props.changeHandler && props.changeHandler(value);\r\n        setValue(value);\r\n    }\r\n    const radio = props.children.map(elem => {\r\n        const classList = [\r\n            classes.radio,\r\n            value === elem && classes.checked\r\n        ].join(\" \");\r\n        return (\r\n            <RadioButton\r\n                key={elem}\r\n                value={elem}\r\n                className={classList}\r\n            >\r\n                {fieldsProps[elem].header}\r\n            </RadioButton>)\r\n    });\r\n    const classList = [\r\n        classes.wrapper,\r\n        props.disabled && classes.disabled\r\n    ].join(\" \");\r\n    return (\r\n        <div className={classList}>\r\n            <RadioGroup\r\n                name={props.name}\r\n                selectedValue={value}\r\n                onChange={changeHandler}>\r\n                {radio}\r\n            </RadioGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideMenu;","import React from 'react'\r\nimport classes from './MainArea.module.css'\r\nimport SideMenu from '../../../components/SideMenu/SideMenu'\r\nimport TextArea from '../../../components/TextArea/TextArea'\r\nimport * as fields from '../../../store/formFields'\r\nimport editIcon from '../../../icons/iconsSVG/EditIcon.svg'\r\nimport closeIcon from '../../../icons/iconsSVG/CloseIcon.svg'\r\n\r\nconst MainArea = (props) => {\r\n  const value = props.value;\r\n  const [editMode, toggleEditMode] = React.useState(false);\r\n  const editWindow =\r\n    <div className={classes[\"edit-window\"]}>\r\n      <TextArea\r\n        value={value}\r\n        onChange={(text) => props.changeFieldText(props.currentField, text)} />\r\n      <div className={classes[\"edit-button\"]}\r\n        style={{ backgroundImage: `url(${closeIcon})` }}\r\n        onClick={() => { toggleEditMode(false); }} />\r\n    </div>\r\n  return (\r\n    <div className={classes.main}>\r\n      <SideMenu name=\"form-fields\"\r\n        changeHandler={props.changeField}\r\n        disabled={editMode}>\r\n        {fields.client}\r\n        {fields.problems}\r\n        {fields.idea}\r\n        {fields.advantages}\r\n        {fields.model}\r\n      </SideMenu>\r\n      <div className={classes.wrapper}>\r\n        <span className={classes.tip}>Описание твоей идеи было собрано и сведено ниже. Ты можешь оставить формулировку идеи такой или отредактировать, чтобы донести суть и ценность твоей идеи.</span>\r\n        <strong className={classes.theme}>{props.theme}</strong>\r\n        <div className={classes[\"edit-form\"]} style={{ overflow: editMode ? \"hidden\" : \"auto\" }}>\r\n          <div className={classes[\"edit-button\"]}\r\n            style={{ backgroundImage: `url(${editIcon})` }}\r\n            onClick={() => { toggleEditMode(true) }} />\r\n          {value}\r\n          {editMode && editWindow}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainArea;","import MainArea from './MainArea';\r\nimport { connect } from 'react-redux'\r\nimport { changeField, changeFieldText } from '../../../store/actionCreators'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.fieldValues[state.currentField],\r\n  currentField: state.currentField,\r\n  theme: state.theme\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeField: (field) => { dispatch(changeField(field)) },\r\n  changeFieldText: (field, text) => { dispatch(changeFieldText(field, text))}\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainArea);","import React from 'react';\r\nimport Header from './Header/HeaderContainer';\r\nimport MainArea from './MainArea/MainAreaContainer';\r\n\r\nconst EditFormPage = (props) => {\r\n    return (\r\n        <div style={{\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n        }}>\r\n            <Header />\r\n            <MainArea />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EditFormPage;","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport EditFormPage from './pages/EditFormPage/EditFormPage';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nfunction App () {\r\n\r\n  // вывод страниц\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/\" exact component={MainPage} />\r\n        <Route path=\"/edit-form\" exact component={EditFormPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* Редьюсеры принимают в параметрах текущее состояние\r\nи action. Благодаря action.type редьюсеры понимают, что\r\nименно нужно изменить в state. Дополнительные поля в объекте \r\naction могут быть любыми. Важно: редьюсер должен\r\nвозвращать именно новый объект. Чтобы добавить новый\r\nфункционал, пишем в новом файле новую функцию-редьюсер\r\nи дописываем её имя в combineReducers */\r\nimport {\r\n    ADD_STICKER,\r\n    DELETE_STICKER,\r\n    CHANGE_STICKER_TYPE,\r\n    CHANGE_STICKER_POSITION,\r\n    CHANGE_STICKER_TEXT,\r\n} from '../actionTypes'\r\n\r\n\r\n/* Всегда параметром по умалчанию прокидываем начальное состояние,\r\nможно пустое, главное, чтобы редьюсер не возвращал undefined */\r\nconst initialState = {\r\n    array: [],\r\n    currentId: 0,\r\n}\r\n\r\n/* В блоке switch после всех кейсов нужно в default вернуть исходный state */\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_STICKER:\r\n            {\r\n                const positions = [0, ...state.array\r\n                .filter(elem => elem.type === action.stickerType)\r\n                .map(elem => elem.position)];\r\n                const sticker = {\r\n                    header: \"\",\r\n                    content: \"\",\r\n                    position: Math.max(...positions) + 1,\r\n                    id: state.currentId + 1,\r\n                    type: action.stickerType,\r\n                }\r\n                return {\r\n                    ...state,\r\n                    currentId: state.currentId + 1,\r\n                    array: [\r\n                        ...state.array,\r\n                        sticker\r\n                    ]\r\n                }\r\n            }\r\n        case DELETE_STICKER:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    array: [\r\n                        ...state.array.filter(elem => elem.id !== action.id)\r\n                    ]\r\n                }\r\n            }\r\n        case CHANGE_STICKER_TYPE:\r\n            {\r\n                const newPosition = state.array.filter((elem) => elem.type === action.newType).length;\r\n                return {\r\n                    ...state,\r\n                    array: [\r\n                        ...state.array.map((elem) => {\r\n                            if (elem.id === action.id) {\r\n                                elem.type = action.newType;\r\n                                elem.position = newPosition;\r\n                            }\r\n                            return elem;\r\n                        })\r\n                    ]\r\n                }\r\n            }\r\n        case CHANGE_STICKER_POSITION:\r\n            {\r\n                // в каком сегменте\r\n                const sticker = state.array.filter((elem) => elem.id === action.id)[0];\r\n                // проверяем, в какую сторону двигают стикер\r\n                const moveRight = !!(sticker.position < action.position);\r\n                // все стикеры сегмента\r\n                let sameTypeArr = state.array.filter((elem) => elem.type === sticker.type);\r\n                // позиционируем перетаскиваемый стикер\r\n                sameTypeArr = sameTypeArr.map((elem) => {\r\n                    if (elem.id === action.id) {\r\n                        elem.position = moveRight ? action.position + 0.5 : action.position - 0.5;\r\n                    }\r\n                    return elem;\r\n                })\r\n                    // сортируем стикеры по позициям\r\n                    .sort((a, b) => a.position - b.position)\r\n                    // меняем значения на целые числа\r\n                    .map((elem, ind) => {\r\n                        elem.position = ind;\r\n                        return elem;\r\n                    });\r\n                return {\r\n                    ...state,\r\n                    array: [\r\n                        ...state.array.filter((elem) => elem.type !== sticker.type),\r\n                        ...sameTypeArr\r\n                    ]\r\n                }\r\n            }\r\n        case CHANGE_STICKER_TEXT:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    array: [\r\n                        ...state.array.map((elem) => {\r\n                            if (elem.id === action.id) {\r\n                                elem.header = action.header;\r\n                                elem.content = action.content;\r\n                            }\r\n                            return elem;\r\n                        })\r\n                    ]\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    START_STICKER_DRAGGING,\r\n    STOP_STICKER_DRAGGING\r\n} from '../actionTypes'\r\n\r\nconst initialState = {\r\n    isActive: false,\r\n    id: -1,\r\n    type: \"\",\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case START_STICKER_DRAGGING:\r\n            {\r\n                return ({ id: action.id, type: action.stickerType, isActive: true });\r\n            }\r\n        case STOP_STICKER_DRAGGING:\r\n            {\r\n                return initialState;\r\n            }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}","import {\r\n    OPEN_STICKER_EDITING_WINDOW,\r\n    CLOSE_STICKER_EDITING_WINDOW\r\n} from '../actionTypes'\r\n\r\nconst initialState = {\r\n    isActive: false,\r\n    id: -1,\r\n    type: \"\",\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case OPEN_STICKER_EDITING_WINDOW:\r\n            {\r\n                return ({ type: action.stickerType, isActive: true, id: action.id });\r\n            }\r\n        case CLOSE_STICKER_EDITING_WINDOW:\r\n            {\r\n                return initialState;\r\n            }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}","import {\r\n    CHANGE_FIELD_TEXT\r\n} from '../actionTypes'\r\nimport * as fields from '../formFields'\r\n\r\nconst initialState = {\r\n    [fields.client]: \"\",\r\n    [fields.problems]: \"\",\r\n    [fields.idea]: \"\",\r\n    [fields.advantages]: \"\",\r\n    [fields.model]: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FIELD_TEXT:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    [action.field]: action.text\r\n                };\r\n            }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}","/* Создаём store из редьюсеров, импортируем сюда каждый новосозданный\r\nредьюсер и дописываем в combineReducers*/\r\nimport { createStore, combineReducers } from 'redux'\r\nimport stickers from './reducers/stickers'\r\nimport stickerDragging from './reducers/stickerDragging'\r\nimport stickerEditingWindow from './reducers/stickerEditingWindow'\r\nimport hover from './reducers/hover'\r\nimport currentField from './reducers/currentField'\r\nimport fieldValues from './reducers/fieldValues'\r\nimport theme from './reducers/theme'\r\n\r\nexport default createStore(combineReducers({\r\n    stickers,\r\n    stickerDragging,\r\n    stickerEditingWindow,\r\n    hover,\r\n    currentField,\r\n    fieldValues,\r\n    theme,\r\n}),\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import {\r\n    CHANGE_HOVER\r\n} from '../actionTypes'\r\n\r\nconst initialState = \"\";\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_HOVER:\r\n            {\r\n                return action.hover;\r\n            }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}","import {\r\n    CHANGE_FIELD\r\n} from '../actionTypes'\r\nimport * as fields from '../formFields'\r\n\r\nconst initialState = fields.client;\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FIELD:\r\n            {\r\n                return action.field;\r\n            }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}","import {\r\n    CHANGE_THEME\r\n} from '../actionTypes'\r\n\r\nconst initialState = \"\";\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_THEME:\r\n            {\r\n                return action.theme;\r\n            }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\n/* оборачиваем весь App в Provider, чтобы \r\nstore был доступен внутри компонентов */\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <App />\r\n            </DndProvider>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StickerEditingWindow_wrapper__snpCV\",\"blur\":\"StickerEditingWindow_blur__14BQq\",\"title\":\"StickerEditingWindow_title__1ohep\",\"textareaContainer\":\"StickerEditingWindow_textareaContainer__1TKge\",\"stickerTittle\":\"StickerEditingWindow_stickerTittle__1IK_s\",\"stickerDescription\":\"StickerEditingWindow_stickerDescription__rJOwA\",\"footer\":\"StickerEditingWindow_footer__2XBfH\",\"close\":\"StickerEditingWindow_close__QwFgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainArea_main__31NPb\",\"work-area\":\"MainArea_work-area__Rnbhq\",\"work-area-wrapper\":\"MainArea_work-area-wrapper__2UsVJ\",\"title\":\"MainArea_title__27E61\",\"theme-field\":\"MainArea_theme-field__2CCm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainArea_main__34lHT\",\"wrapper\":\"MainArea_wrapper__2hf4M\",\"tip\":\"MainArea_tip__3NlrL\",\"edit-form\":\"MainArea_edit-form__38j4R\",\"edit-button\":\"MainArea_edit-button__37bZC\",\"edit-window\":\"MainArea_edit-window__Ua785\",\"theme\":\"MainArea_theme__7EC21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1qcDK\",\"disabled\":\"Button_disabled__T0eQj\",\"accent\":\"Button_accent__1N0Z8\",\"regular\":\"Button_regular__1mjew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SideMenu_wrapper__y_y3I\",\"radio\":\"SideMenu_radio__1_pr-\",\"checked\":\"SideMenu_checked__1jTYk\",\"disabled\":\"SideMenu_disabled__um250\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.b40c2faf.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__1oDG1\",\"left\":\"Header_left__1cjSC\",\"right\":\"Header_right__2rGLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sticker_wrapper__SiOqz\",\"stickerFonts\":\"Sticker_stickerFonts__aRGfy\",\"delete\":\"Sticker_delete__PE2I1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddButton_wrapper__2lVPB\",\"horisontal\":\"AddButton_horisontal__32oSB\",\"vertical\":\"AddButton_vertical__2hyEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SegmentHeader_wrapper__JFp5V\",\"title\":\"SegmentHeader_title__3H-8G\"};"],"sourceRoot":""}